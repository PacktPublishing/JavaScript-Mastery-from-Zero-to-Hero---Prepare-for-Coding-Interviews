{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red236\green101\blue197;
\red28\green92\blue255;}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c94902\c50196\c81569;
\cssrgb\c13333\c46667\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:\cf4 \cb1 \strokec4 \
\cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "lesson"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Regex matches in JavaScript\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Regular expressions are patterns used to match character combinations in strings. \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 In JavaScript, regular expressions are also objects.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 A grouping is like a mini-regex inside of a pair of parenthesis, \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 while a character set is a range between square brackets. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Example: \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 /([a-z])([A-Z])/g\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 So this captures\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6     one character a-z,\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6     one character A-Z\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Example 1: Regex for pattern matching and replacing\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 // Code Examples:\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 // Example 1: Regex for pattern matching and replacing\cf4 \cb1 \strokec4 \
\

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  str \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 "ThreeTwo = Five"\cf4 \strokec4 ;\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  updatedStr \cf7 \strokec7 =\cf4 \strokec4  str.\cf5 \strokec5 replace\cf4 \strokec4 (\cf6 \strokec6 /(\cf9 \strokec9 [a-z]\cf6 \strokec6 )(\cf9 \strokec9 [A-Z]\cf6 \strokec6 )/\cf7 \strokec7 g\cf4 \strokec4 , 
\f1\i \cf8 \strokec8 function
\f0\i0 \cf4 \strokec4  (
\f1\i \cf10 \strokec10 match
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 s1
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 s2
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  s1 \cf7 \strokec7 +\cf4 \strokec4  \cf6 \strokec6 " + "\cf4 \strokec4  \cf7 \strokec7 +\cf4 \strokec4  s2;\cb1 \
\cb3 \});\cb1 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Example 1: "\cf4 \strokec4 , updatedStr);\cb1 \
\
\cf2 \cb3 \strokec2 // Exercise\cf4 \cb1 \strokec4 \
\cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "exercise"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Exercise - Star Power with Regex in JavaScript\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 You are working for a website called Star Power and they just can't get enough\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 stars. They loves stars so much in fact, so much that they want you to design an\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 algorithm which will replace all grouping of upper and lowercases with spaces \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 following by an asterix in between. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Strange request? - Perhaps! But sometimes we just gotta do what the job requires. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 For Example - \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Given the following string: 'starPower Forever', we should replace it with:\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 star * power * forever\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 1. Write a function starPowerAlgo which takes a string as an argument and returns a\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 new string in all lowercase.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 2. The function should replace all groupings of uppercases and lowercases with a space\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 and should also replace all spaces with an asterix. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 IE: The string 'starPower Forever' should be replaced with 'star * power * forever'\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 2. Call and log the funciton passing in 'starPower Forever'\cf4 \cb1 \strokec4 \
\
\
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 // Exercise Solution:\cf4 \cb1 \strokec4 \
\

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 starPowerAlgo\cf4 \strokec4 (
\f1\i \cf10 \strokec10 str
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  arr \cf7 \strokec7 =\cf4 \strokec4  [];\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  dash \cf7 \strokec7 =\cf4 \strokec4  [];\cb1 \
\cb3   arr \cf7 \strokec7 =\cf4 \strokec4  str\cb1 \
\cb3     .\cf5 \strokec5 replace\cf4 \strokec4 (\cf6 \strokec6 /(\cf9 \strokec9 [a-z]\cf6 \strokec6 )(\cf9 \strokec9 [A-Z]\cf6 \strokec6 )/\cf7 \strokec7 g\cf4 \strokec4 , \cf6 \strokec6 "$1 $2"\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 toLowerCase\cf4 \strokec4 ()\cb1 \
\cb3     .\cf5 \strokec5 split\cf4 \strokec4 (\cf6 \strokec6 " "\cf4 \strokec4 );\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  arr.\cf5 \strokec5 join\cf4 \strokec4 (\cf6 \strokec6 " * "\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 /*\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2   for(let i = 0; i < arr.length; i++) \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     dash += arr[i] + ' * '\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2   \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2   let split = dash.toString().split('')\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 .splice(0, dash.length - 2)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2   let string = split.join('')\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2   return string\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2   */\cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Exercise Solution"\cf4 \strokec4 , \cf5 \strokec5 starPowerAlgo\cf4 \strokec4 (\cf6 \strokec6 "starPower Forever"\cf4 \strokec4 ));\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \
}