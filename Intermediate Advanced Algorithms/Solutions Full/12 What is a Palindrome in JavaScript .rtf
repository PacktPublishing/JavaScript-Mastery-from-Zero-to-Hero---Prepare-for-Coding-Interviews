{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red28\green92\blue255;
\red236\green101\blue197;}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c13333\c46667\c100000;
\cssrgb\c94902\c50196\c81569;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "lesson"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 What is a Palindrome in JavaScript\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 The difference between anagram and palindrome is that anagram is (of words) \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 a word or phrase that is created by rearranging the letters of another word or \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 phrase while palindrome is a word, phrase, number or any other sequence of \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 units which has the property of reading the same forwards as it does backwards, \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 character for character, sometimes disregarding punctuation, capitalization and \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 diacritics. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 IE eye = true, eyes = false \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Example 1: Recall the Anagram Example\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Code Examples:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // RECALL THE ANAGRAM EXAMPLE:\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  arr2 \cf7 \strokec7 =\cf4 \strokec4  [\cf6 \strokec6 "Statue of Liberty"\cf4 \strokec4 , \cf6 \strokec6 "Sticky Bird free"\cf4 \strokec4 ]; \cf2 \strokec2 // F\cf4 \cb1 \strokec4 \
\

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 decodeMutations\cf4 \strokec4 (
\f1\i \cf9 \strokec9 arr
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  array1 \cf7 \strokec7 =\cf4 \strokec4  [];\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  array2 \cf7 \strokec7 =\cf4 \strokec4  [];\cb1 \
\cb3   array1.\cf5 \strokec5 push\cf4 \strokec4 (\cf7 \strokec7 ...\cf4 \strokec4 arr[\cf10 \strokec10 0\cf4 \strokec4 ]);\cb1 \
\cb3   array2.\cf5 \strokec5 push\cf4 \strokec4 (\cf7 \strokec7 ...\cf4 \strokec4 arr[\cf10 \strokec10 1\cf4 \strokec4 ]);\cb1 \
\cb3   
\f1\i \cf8 \strokec8 const
\f0\i0 \cf4 \strokec4  lowCase1 \cf7 \strokec7 =\cf4 \strokec4  array1.\cf5 \strokec5 map\cf4 \strokec4 ((
\f1\i \cf9 \strokec9 char
\f0\i0 \cf4 \strokec4 ) 
\f1\i \cf8 \strokec8 =>
\f0\i0 \cf4 \strokec4  char.\cf5 \strokec5 toLowerCase\cf4 \strokec4 ());\cb1 \
\cb3   
\f1\i \cf8 \strokec8 const
\f0\i0 \cf4 \strokec4  lowCase2 \cf7 \strokec7 =\cf4 \strokec4  array2.\cf5 \strokec5 map\cf4 \strokec4 ((
\f1\i \cf9 \strokec9 char
\f0\i0 \cf4 \strokec4 ) 
\f1\i \cf8 \strokec8 =>
\f0\i0 \cf4 \strokec4  char.\cf5 \strokec5 toLowerCase\cf4 \strokec4 ());\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  str1 \cf7 \strokec7 =\cf4 \strokec4  lowCase1.\cf5 \strokec5 sort\cf4 \strokec4 ().\cf5 \strokec5 join\cf4 \strokec4 (\cf6 \strokec6 ""\cf4 \strokec4 );\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  str2 \cf7 \strokec7 =\cf4 \strokec4  lowCase2.\cf5 \strokec5 sort\cf4 \strokec4 ().\cf5 \strokec5 join\cf4 \strokec4 (\cf6 \strokec6 ""\cf4 \strokec4 );\cb1 \
\cb3   
\f1\i \cf8 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "c1 - dynamite:"\cf4 \strokec4 , lowCase1, \cf6 \strokec6 "c2 - mayitend:"\cf4 \strokec4 , str2);\cb1 \
\cb3   \cf7 \strokec7 if\cf4 \strokec4  (str1 \cf7 \strokec7 ===\cf4 \strokec4  str2) \cf7 \strokec7 return\cf4 \strokec4  \cf10 \strokec10 true\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 else\cf4 \strokec4  \cf7 \strokec7 return\cf4 \strokec4  \cf10 \strokec10 false\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Example 1:"\cf4 \strokec4 , \cf5 \strokec5 decodeMutations\cf4 \strokec4 (arr2));\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "exercise"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 Interview Question - Check if a string is a Palindrome \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 1. Write a function called palindrome that takes a string as a parameter\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 that returns true if a word is a palindrome and false if a word is not a\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 palindrome.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 2. NOTE that any non-alphanumeric characters (including the underscore) should\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 be disregarded (for example: ./[[]] should be disregarded).\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 3. Log and call the function twice passing in the following strings:\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 "// [_t  o t_]" expected output: true\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 " map" expected output: false\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 4. Share your solution in the discord and good luck! \cf4 \cb1 \strokec4 \
\
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise Solution:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 palindrome\cf4 \strokec4 (
\f1\i \cf9 \strokec9 str
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  array1 \cf7 \strokec7 =\cf4 \strokec4  str\cb1 \
\cb3     .\cf5 \strokec5 replace\cf4 \strokec4 (\cf6 \strokec6 /\cf10 \strokec10 [\cf7 \strokec7 ^\cf10 \strokec10 0-9a-z]\cf6 \strokec6 /\cf7 \strokec7 gi\cf4 \strokec4 , \cf6 \strokec6 ""\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 toLowerCase\cf4 \strokec4 ()\cb1 \
\cb3     .\cf5 \strokec5 split\cf4 \strokec4 (\cf6 \strokec6 ""\cf4 \strokec4 );\cb1 \
\cb3   
\f1\i \cf8 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (array1);\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  array2 \cf7 \strokec7 =\cf4 \strokec4  str\cb1 \
\cb3     .\cf5 \strokec5 replace\cf4 \strokec4 (\cf6 \strokec6 /\cf10 \strokec10 [\cf7 \strokec7 ^\cf10 \strokec10 0-9a-z]\cf6 \strokec6 /\cf7 \strokec7 gi\cf4 \strokec4 , \cf6 \strokec6 ""\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 toLowerCase\cf4 \strokec4 ()\cb1 \
\cb3     .\cf5 \strokec5 split\cf4 \strokec4 (\cf6 \strokec6 ""\cf4 \strokec4 )\cb1 \
\cb3     .\cf5 \strokec5 reverse\cf4 \strokec4 ();\cb1 \
\cb3   
\f1\i \cf8 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (array2);\cb1 \
\cb3   
\f1\i \cf8 \strokec8 const
\f0\i0 \cf4 \strokec4  str1 \cf7 \strokec7 =\cf4 \strokec4  array1.\cf5 \strokec5 join\cf4 \strokec4 (\cf6 \strokec6 ""\cf4 \strokec4 );\cb1 \
\cb3   
\f1\i \cf8 \strokec8 const
\f0\i0 \cf4 \strokec4  str2 \cf7 \strokec7 =\cf4 \strokec4  array2.\cf5 \strokec5 join\cf4 \strokec4 (\cf6 \strokec6 ""\cf4 \strokec4 );\cb1 \
\cb3   
\f1\i \cf8 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "str1"\cf4 \strokec4 , str1);\cb1 \
\cb3   
\f1\i \cf8 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "str2"\cf4 \strokec4 , str2);\cb1 \
\cb3   \cf7 \strokec7 if\cf4 \strokec4  (str1 \cf7 \strokec7 ===\cf4 \strokec4  str2) \{\cb1 \
\cb3     \cf7 \strokec7 return\cf4 \strokec4  \cf10 \strokec10 true\cf4 \strokec4 ;\cb1 \
\cb3   \} \cf7 \strokec7 else\cf4 \strokec4  \cf7 \strokec7 return\cf4 \strokec4  \cf10 \strokec10 false\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf5 \strokec5 palindrome\cf4 \strokec4 (\cf6 \strokec6 "// [_t  o t_]"\cf4 \strokec4 ));\cb1 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf5 \strokec5 palindrome\cf4 \strokec4 (\cf6 \strokec6 " map"\cf4 \strokec4 ));\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // [_t  o t_]\cf4 \cb1 \strokec4 \
\
}