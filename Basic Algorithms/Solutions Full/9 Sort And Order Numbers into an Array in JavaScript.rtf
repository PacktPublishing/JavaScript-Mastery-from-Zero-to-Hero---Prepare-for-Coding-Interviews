{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red236\green101\blue197;
\red28\green92\blue255;\red173\green173\blue173;}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c94902\c50196\c81569;
\cssrgb\c13333\c46667\c100000;\cssrgb\c73333\c73333\c73333;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:\cf4 \cb1 \strokec4 \
\cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "lesson"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Sort And Order Numbers into an Array in JavaScript\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 The sort() method sorts the elements in an array in an order\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 and returns the sorted array. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 The default sort order is ascending, built upon converting the elements\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 into strings, also comparing their UTF-16 code units into values. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Ex: sort((a,b) => (a - b))\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 The compare function does the following:\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 if(a < b by some criteria) \{\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   return - 1\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 \}\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 if(a > b by some criteria) \{\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   return 1\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 \}\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 a === b then retun 0 \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Example 1: What Is The Sort Method in JavaScrip\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 // Code Examples:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // Example 1: What Is The Sort Method in JavaScript\cf4 \cb1 \strokec4 \
\

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  evenNumbers \cf7 \strokec7 =\cf4 \strokec4  [\cf9 \strokec9 2\cf4 \strokec4 , \cf9 \strokec9 8\cf4 \strokec4 , \cf9 \strokec9 12\cf4 \strokec4 , \cf9 \strokec9 6\cf4 \strokec4 , \cf9 \strokec9 4\cf4 \strokec4 , \cf9 \strokec9 10\cf4 \strokec4 ];\cb1 \

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  randomLetters \cf7 \strokec7 =\cf4 \strokec4  [\cf6 \strokec6 "b"\cf4 \strokec4 , \cf6 \strokec6 "e"\cf4 \strokec4 , \cf6 \strokec6 "a"\cf4 \strokec4 , \cf6 \strokec6 "c"\cf4 \strokec4 ];\cb1 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cb1 \
\cb3   \cf6 \strokec6 "Example 1"\cf4 \strokec4 ,\cb1 \
\cb3   evenNumbers.\cf5 \strokec5 sort\cf4 \strokec4 ((
\f1\i \cf10 \strokec10 a
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 b
\f0\i0 \cf4 \strokec4 ) 
\f1\i \cf8 \strokec8 =>
\f0\i0 \cf4 \strokec4  a \cf7 \strokec7 -\cf4 \strokec4  b),\cb1 \
\cb3   randomLetters.\cf5 \strokec5 sort\cf4 \strokec4 ()\cb1 \
\cb3 );\cb1 \
\
\cf2 \cb3 \strokec2 // Example 1: What is the sort method in JavaScript\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 // Exercise\cf4 \cb1 \strokec4 \
\cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "exercise"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Interview Challenge: Sort And Order Numbers into an Array \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 You are at an interview you get asked the famous sort question but with a TWIST! duh duh duh\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 The interviewer wants to see if you can go above and beyond and asks you to not only sort a \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 disordered array of numbers, but also insert any given number into the array in its correct\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 ordered position. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 IE array = [3,35,2,1] and num = 4\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 script expected output: [1,2,3,4,35]\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Prove your valour and show this interviewer what you're made of ;) \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Before beginning, create a new array (numbersArray) under the \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Exercise Solution section of the template with the following numerical \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 values in the given order: numbersArray = [120, 420, 12, 3, 24]\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 1. Write a a function called sortAndOrder which takes two arguments; an array and a number.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 2. The function should sort ascendingly and evaluate any given array's numerical values \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 as well as insert in order any number into the array provided by the number argument of the\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 sortAndOrder function. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 3. Call and log the function sortAndOrder passing in the arguments the \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 numbersArray and the value 42.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 4. Share you solution on the discord in the #alogrithms channel and rejoice victorious!\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 // Exercise Solution:\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 // Solution I\cf4 \cb1 \strokec4 \
\

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  numbersArray \cf7 \strokec7 =\cf4 \strokec4  [\cf9 \strokec9 120\cf4 \strokec4 , \cf9 \strokec9 420\cf4 \strokec4 , \cf9 \strokec9 12\cf4 \strokec4 , \cf9 \strokec9 3\cf4 \strokec4 , \cf9 \strokec9 24\cf4 \strokec4 ];\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 sortAndOrder\cf4 \strokec4 (
\f1\i \cf10 \strokec10 arr
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 num
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3   arr.\cf5 \strokec5 sort\cf4 \strokec4 ((
\f1\i \cf10 \strokec10 a
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 b
\f0\i0 \cf4 \strokec4 ) 
\f1\i \cf8 \strokec8 =>
\f0\i0 \cf4 \strokec4  a \cf7 \strokec7 -\cf4 \strokec4  b);\cb1 \
\cb3   \cf7 \strokec7 for\cf4 \strokec4  (
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf9 \strokec9 0\cf4 \strokec4 ; i \cf7 \strokec7 <\cf4 \strokec4  arr.length; i\cf7 \strokec7 ++\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf7 \strokec7 if\cf4 \strokec4  (arr[i] \cf7 \strokec7 >=\cf4 \strokec4  num) \{\cb1 \
\cb3       arr.\cf5 \strokec5 splice\cf4 \strokec4 (i, \cf9 \strokec9 0\cf4 \strokec4 , num);\cb1 \
\cb3       \cf7 \strokec7 break\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  arr;\cb1 \
\cb3 \}\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Exercise Solution I"\cf4 \strokec4 , \cf5 \strokec5 sortAndOrder\cf4 \strokec4 (numbersArray, \cf9 \strokec9 42\cf4 \strokec4 ));\cb1 \
\
\cf2 \cb3 \strokec2 // Solution II\cf4 \cb1 \strokec4 \
\

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 sortAndOrder2\cf4 \strokec4 (
\f1\i \cf10 \strokec10 arr
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 num
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3   \cf2 \strokec2 // concat\cf4 \cb1 \strokec4 \
\cb3   arr.\cf5 \strokec5 concat\cf4 \strokec4 (num).\cf5 \strokec5 sort\cf4 \strokec4 ((
\f1\i \cf10 \strokec10 a
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 b
\f0\i0 \cf4 \strokec4 ) 
\f1\i \cf8 \strokec8 =>
\f0\i0 \cf4 \strokec4  a \cf7 \strokec7 -\cf4 \strokec4  b);\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  arr;\cb1 \
\cb3 \}\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Exercise Solution II"\cf4 \strokec4 , \cf5 \strokec5 sortAndOrder2\cf4 \strokec4 (numbersArray, \cf9 \strokec9 42\cf4 \strokec4 ));\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf11 \outl0\strokewidth0 \
\
}