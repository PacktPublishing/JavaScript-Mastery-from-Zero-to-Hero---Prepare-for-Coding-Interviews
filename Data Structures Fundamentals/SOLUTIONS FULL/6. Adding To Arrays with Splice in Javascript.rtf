{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red236\green101\blue197;
\red28\green92\blue255;}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c94902\c50196\c81569;
\cssrgb\c13333\c46667\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "lesson"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 Adding To Arrays with Splice in Javascript\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 We've seen how the first two arguments of splice are used for selecting\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 a starting position and then inputting the number of elements to be removed or\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 deleted. There is also a third argument to splice as well. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 The third argument of splice allow you to swap out the elements you are removing\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 with new variables. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Ex 1 (Splice - Swapping in New Elements)\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Code Examples:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // Example 1: Splice - Swapping in New Elements\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  FixMePlease \cf7 \strokec7 =\cf4 \strokec4  [\cf6 \strokec6 "this"\cf4 \strokec4 , \cf6 \strokec6 "sentence"\cf4 \strokec4 , \cf6 \strokec6 "broken"\cf4 \strokec4 , \cf6 \strokec6 "pie"\cf4 \strokec4 , \cf6 \strokec6 "now"\cf4 \strokec4 ];\cb1 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Example 1:"\cf4 \strokec4 , FixMePlease);\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 FixMePlease.\cf5 \strokec5 splice\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4 , \cf6 \strokec6 "is"\cf4 \strokec4 , \cf6 \strokec6 "fixed"\cf4 \strokec4 );\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "exercise"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 Exercise Update User Names with Splice \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 1. Declare the function updateUserNames which takes an array as an argument and return \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 the array.\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 2. Log to the console updateUserNames and append the following string literal names\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 to the array: 'Thomas', 'Suzie','Jessica','Jonny'\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 3. Back in the updaetUserNames function, update the user names of the array by replacing\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 'Suzie' with the new user 'Bob' using the splice method.\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 4. Celebrate your victory once you are successful! \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise Solution:\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 updateUserNames\cf4 \strokec4 (
\f1\i \cf10 \strokec10 array
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   array.\cf5 \strokec5 splice\cf4 \strokec4 (\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 , \cf6 \strokec6 "Bob"\cf4 \strokec4 );\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  array;\cb1 \
\cb3 \}\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 "Exercise Solution"\cf4 \strokec4 ,\cb1 \
\cb3   \cf5 \strokec5 updateUserNames\cf4 \strokec4 ([\cf6 \strokec6 "Thomas"\cf4 \strokec4 , \cf6 \strokec6 "Suzie"\cf4 \strokec4 , \cf6 \strokec6 "Jessica"\cf4 \strokec4 , \cf6 \strokec6 "Jonny"\cf4 \strokec4 ])\cb1 \
\cb3 );\cb1 \
}