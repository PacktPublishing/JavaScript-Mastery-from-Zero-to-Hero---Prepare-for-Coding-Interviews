{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red236\green101\blue197;
\red28\green92\blue255;}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c94902\c50196\c81569;
\cssrgb\c13333\c46667\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "lesson"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 Return The Smallest Numbers in Nested Arrays\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Let's challenge our ability to work with nested and multi-dimensional arrays\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 as well as our understanding of backet notation\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Example 1: Math.min()\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 The Math.min() method returns the number with the lowest value.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Another tip: Math.max() returns the number with the highest value.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Code Examples:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // Example 1: Math.min()\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  array \cf7 \strokec7 =\cf4 \strokec4  [\cf9 \strokec9 0\cf4 \strokec4 , \cf9 \strokec9 42\cf4 \strokec4 , \cf9 \strokec9 4122\cf4 \strokec4 ];\cb1 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Example 1:"\cf4 \strokec4 , \cf8 \strokec8 Math\cf4 \strokec4 .\cf8 \strokec8 min\cf4 \strokec4 (\cf7 \strokec7 ...\cf4 \strokec4 array));\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "exercise"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 Given the following multi-dimensional array:\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 const multiArray = [[234,35,2,1],[53,3,6554,4],[45,632,31,566]]\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 1. Write a function smallestNumbers which takes a mult dimensional array as an argument and \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 returns a new array containing only the smallest integers from each sub array. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 2. Log out the function and pass in multiArray as the argument.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 3. Share your solutions in the discord channel #algorithms \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise Solution:\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 const
\f0\i0 \cf4 \strokec4  multiArray \cf7 \strokec7 =\cf4 \strokec4  [\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   [\cf9 \strokec9 234\cf4 \strokec4 , \cf9 \strokec9 35\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4 , \cf9 \strokec9 1\cf4 \strokec4 ],\cb1 \
\cb3   [\cf9 \strokec9 53\cf4 \strokec4 , \cf9 \strokec9 3\cf4 \strokec4 , \cf9 \strokec9 6554\cf4 \strokec4 , \cf9 \strokec9 4\cf4 \strokec4 ],\cb1 \
\cb3   [\cf9 \strokec9 45\cf4 \strokec4 , \cf9 \strokec9 632\cf4 \strokec4 , \cf9 \strokec9 31\cf4 \strokec4 , \cf9 \strokec9 566\cf4 \strokec4 ]\cb1 \
\cb3 ];\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 smallestNumbers\cf4 \strokec4 (
\f1\i \cf10 \strokec10 arr
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  newArray \cf7 \strokec7 =\cf4 \strokec4  [];\cb1 \
\cb3   \cf7 \strokec7 for\cf4 \strokec4  (
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf9 \strokec9 0\cf4 \strokec4 ; i \cf7 \strokec7 <\cf4 \strokec4  arr.length; i\cf7 \strokec7 ++\cf4 \strokec4 ) \{\cb1 \
\cb3     newArray.\cf5 \strokec5 push\cf4 \strokec4 (\cf8 \strokec8 Math\cf4 \strokec4 .\cf8 \strokec8 min\cf4 \strokec4 (\cf7 \strokec7 ...\cf4 \strokec4 arr[i]));\cb1 \
\cb3   \}\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  newArray;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Exercise Solution"\cf4 \strokec4 , \cf5 \strokec5 smallestNumbers\cf4 \strokec4 (multiArray));\cb1 \
}