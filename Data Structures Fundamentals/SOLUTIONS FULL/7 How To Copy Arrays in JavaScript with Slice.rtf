{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red236\green101\blue197;
\red28\green92\blue255;}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c94902\c50196\c81569;
\cssrgb\c13333\c46667\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "lesson"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 How To Clone Arrays (make copies) with Slice\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Slice is a method which can copy an array's data to new storage without modifying the\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 original array.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Slice takes two arguments. The first is the position to start copying data and the \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 second one is where we wish to stop copying the array's data (up to and not including). \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Ex 1: Copy an Array with Slice\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Code Examples:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // Example 1: Copy an Array with Slice\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  trainingData \cf7 \strokec7 =\cf4 \strokec4  [\cf6 \strokec6 "10,000 steps"\cf4 \strokec4 , \cf6 \strokec6 "7 Javascript Exercises"\cf4 \strokec4 , \cf6 \strokec6 "4 React Videos"\cf4 \strokec4 ];\cb1 \

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  codingData \cf7 \strokec7 =\cf4 \strokec4  trainingData.\cf5 \strokec5 slice\cf4 \strokec4 (\cf9 \strokec9 2\cf4 \strokec4 , \cf9 \strokec9 3\cf4 \strokec4 );\cb1 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 "Example one:"\cf4 \strokec4 ,\cb1 \
\cb3   \cf6 \strokec6 "coding data:"\cf4 \strokec4 ,\cb1 \
\cb3   codingData,\cb1 \
\cb3   \cf6 \strokec6 "training data:"\cf4 \strokec4 ,\cb1 \
\cb3   trainingData\cb1 \
\cb3 );\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "exercise"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 Exercise: Update CryptoCurrency Portfolio Data\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 1. Declare a function called cryptoPortfolio which returns the argument arr of an array.\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 2. Log out cryptoPortfolio into the console passing the following crypto data as strings:\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 'Bitcoin', 'Ethereum', 'Solana', 'Ada', 'Chainlink' \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 3. Within the crpyotPortfolio function, duplicate our user's \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 crypto portfolio of only the large caps (Bitcoin and Ethereum) \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 into a new array called newArray and modify the function so that it \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 returns the new array instead of the original one. \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 4. Share your solution in our discord in the #datastructures channel.\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 5. Good luck and may the defi be with you!\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise Solution:\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 crpyotPortfolio\cf4 \strokec4 (
\f1\i \cf10 \strokec10 array
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  newArray \cf7 \strokec7 =\cf4 \strokec4  array.\cf5 \strokec5 slice\cf4 \strokec4 (\cf9 \strokec9 0\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4 );\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  newArray;\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 "Exercise Solution"\cf4 \strokec4 ,\cb1 \
\cb3   \cf5 \strokec5 crpyotPortfolio\cf4 \strokec4 ([\cf6 \strokec6 "Bitcoin"\cf4 \strokec4 , \cf6 \strokec6 "Ethereum"\cf4 \strokec4 , \cf6 \strokec6 "Solana"\cf4 \strokec4 , \cf6 \strokec6 "Ada"\cf4 \strokec4 , \cf6 \strokec6 "Chainlink"\cf4 \strokec4 ])\cb1 \
\cb3 );\cb1 \
\
}