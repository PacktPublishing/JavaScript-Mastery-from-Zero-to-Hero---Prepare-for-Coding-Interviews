{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Italic;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red98\green98\blue98;\red17\green17\blue17;\red255\green255\blue255;
\red214\green156\blue74;\red215\green219\blue225;\red118\green210\blue190;\red132\green99\blue212;\red102\green168\blue206;
\red183\green49\blue49;}
{\*\expandedcolortbl;;\cssrgb\c45882\c45882\c45882;\cssrgb\c8235\c8235\c8235;\cssrgb\c100000\c100000\c100000;
\cssrgb\c87451\c67059\c36078;\cssrgb\c87451\c88627\c90588;\cssrgb\c52549\c85098\c79216;\cssrgb\c59216\c48627\c86275;\cssrgb\c46667\c71765\c84314;
\cssrgb\c77647\c27451\c25098;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\i\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:
\f1\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 document\cf6 \strokec6 .\cf7 \strokec7 getElementById\cf6 \strokec6 ("\cf8 \strokec8 lesson\cf6 \strokec6 ").\cf5 \strokec5 innerHTML\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf8 \strokec8 `\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 Scope in JavaScript refers to the current context of code, \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 which determines the accessibility of variables to JavaScript. \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 The two types of scope are local and global: \cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 Global variables are those declared outside of a block. \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 Local variables are those declared inside of a block.\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 var variables automatically move to the global scope which \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 can create unintended problems in you code\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 using let and const can be much more precise. this can \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 be evidently seen with functions\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 `\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \cb3 \strokec2 // Code Examples:
\f1\i0 \cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 let\cf4 \strokec4  \cf6 \strokec6 x\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf10 \strokec10 2\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cf9 \cb3 \strokec9 function\cf4 \strokec4  \cf7 \strokec7 blockOfCode\cf6 \strokec6 ()\cf4 \strokec4  \cf9 \strokec9 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 let\cf4 \strokec4  \cf6 \strokec6 x\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf10 \strokec10 3\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3   \cf9 \strokec9 return\cf4 \strokec4  \cf6 \strokec6 x;\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 console\cf6 \strokec6 .\cf7 \strokec7 log\cf6 \strokec6 (\cf7 \strokec7 blockOfCode\cf6 \strokec6 (),\cf4 \strokec4  \cf6 \strokec6 x);\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \cb3 \strokec2 // Exercise
\f1\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 document\cf6 \strokec6 .\cf7 \strokec7 getElementById\cf6 \strokec6 ("\cf8 \strokec8 exercise\cf6 \strokec6 ").\cf5 \strokec5 innerHTML\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf8 \strokec8 `\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 `\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \cb3 \strokec2 // Exercise Solution:
\f1\i0 \cf4 \cb1 \strokec4 \
\
}