{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Italic;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red98\green98\blue98;\red17\green17\blue17;\red255\green255\blue255;
\red214\green156\blue74;\red215\green219\blue225;\red118\green210\blue190;\red132\green99\blue212;\red102\green168\blue206;
\red183\green49\blue49;}
{\*\expandedcolortbl;;\cssrgb\c45882\c45882\c45882;\cssrgb\c8235\c8235\c8235;\cssrgb\c100000\c100000\c100000;
\cssrgb\c87451\c67059\c36078;\cssrgb\c87451\c88627\c90588;\cssrgb\c52549\c85098\c79216;\cssrgb\c59216\c48627\c86275;\cssrgb\c46667\c71765\c84314;
\cssrgb\c77647\c27451\c25098;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\i\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
// Course Notes:
\f1\i0 \cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 document\cf6 .\cf7 getElementById\cf6 ("\cf8 lesson\cf6 ").\cf5 innerHTML\cf4  \cf6 =\cf4  \cf8 `\cf4 \cb1 \
\
\cf8 \cb3 Loops can execute a block of code a number of times.\cf4 \cb1 \
\
\cf8 \cb3 JavaScript Loops\cf4 \cb1 \
\cf8 \cb3 Loops are helpful, in order to repeat the same code\cf4 \cb1 \
\cf8 \cb3 over and over again, and provide different values each time\cf4 \cb1 \
\
\cf8 \cb3 Often this is the case when working with arrays:\cf4 \cb1 \
\
\
\cf8 \cb3 `\cf6 ;\cf4 \cb1 \
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \cb3 // Code Examples:
\f1\i0 \cf4 \cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 let\cf4  \cf6 users\cf4  \cf6 =\cf4  \cf6 ["\cf8 Ray\cf6 ",\cf4  \cf6 "\cf8 Susan\cf6 ",\cf4  \cf6 "\cf8 Fake Account\cf6 ",\cf4  \cf6 "\cf8 Batman\cf6 "];\cf4 \cb1 \
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \cb3 // for loop example
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // 3 expressions in the
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // for loop
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // 1 initialize index
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // 2 second expression dTe hnotes
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // how long or where do we
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // wish to loop until
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // 3 we can decide what happens to i
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // for the next iteration
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // let i = 0;
\f1\i0 \cf4 \cb1 \

\f0\i \cf2 \cb3 // for (let i = 0; i < users.length; i++)
\f1\i0 \cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 for\cf4  \cf6 (\cf9 let\cf4  \cf6 i\cf4  \cf6 =\cf4  \cf5 users\cf6 .length\cf4  \cf6 -\cf4  \cf10 1\cf6 ;\cf4  \cf6 i\cf4  \cf6 >=\cf4  \cf10 0\cf6 ;\cf4  \cf6 i--)\cf4  \cf9 \{\cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 console\cf6 .\cf7 log\cf6 (users[i]);\cf4 \cb1 \
\cb3   \cf5 console\cf6 .\cf7 log\cf6 (i\cf4  \cf6 +\cf4  \cf10 1\cf6 );\cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \}\cf4 \cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 console\cf6 .\cf7 log\cf6 ("\cf8 example 1\cf6 ",\cf4  \cf5 users\cf6 .length);\cf4 \cb1 \
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \cb3 // Exercise
\f1\i0 \cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 document\cf6 .\cf7 getElementById\cf6 ("\cf8 exercise\cf6 ").\cf5 innerHTML\cf4  \cf6 =\cf4  \cf8 `\cf4 \cb1 \
\
\cf8 \cb3 Create an algorthim using a for loop \cf4 \cb1 \
\cf8 \cb3 that can add the sum of natural numbers up to 50\cf4 \cb1 \
\cf8 \cb3 (You should use ES6 correctly for variable storage)\cf4 \cb1 \
\
\cf8 \cb3 So positive whole numbers example: 1, 2, 3, etc\cf4 \cb1 \
\cf8 \cb3 The sum of natural numbers of 3 ex: 1 + 2 + 3 = 6 \cf4 \cb1 \
\cf8 \cb3 `\cf6 ;\cf4 \cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 let\cf4  \cf6 sum\cf4  \cf6 =\cf4  \cf10 0\cf6 ;\cf4 \cb1 \
\cf9 \cb3 const\cf4  \cf6 n\cf4  \cf6 =\cf4  \cf10 50\cf6 ; \cf4 \cb1 \
\
\cf9 \cb3 for\cf4  \cf6 (\cf9 let\cf4  \cf6 i\cf4  \cf6 =\cf4  \cf6 n;\cf4  \cf6 i\cf4  \cf6 >=\cf4  \cf10 1\cf6 ;\cf4  \cf6 i--)\cf4  \cf9 \{\cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   
\f0\i \cf2 // sum = sum + i;
\f1\i0 \cf4 \cb1 \
\cb3   \cf6 sum\cf4  \cf6 +=\cf4  \cf6 i;\cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \}\cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 console\cf6 .\cf7 log\cf6 ("\cf8 solution\cf6 ",\cf4  \cf6 sum);\cf4 \cb1 \
\
\
}