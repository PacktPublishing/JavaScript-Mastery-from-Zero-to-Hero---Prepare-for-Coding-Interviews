{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red236\green101\blue197;
}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c94902\c50196\c81569;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "lesson"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 Acessing Arrays - Retrieving Data\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Arrays are not only meant for storing data, but also for retreiving that data.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Quite logically, observe that when we create an array with 5 elements \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 then there are five items in the array\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 For ex: newArray = [1,2,3,4,5]\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Every element or item in the array is marked in javascript with an index. It is very\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 important to note that in Javascript array are zero-indexed. That means the first array item\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 is actually starting at the 0 position and so on and so forth. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 In order to retrieve array values we can use bracket notation to select which value\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 that we want to reference from an array by adding a bracket at the end of the array\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 with the index selection. This is called bracket notation. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Let's check out an example of how we could assign a value from an array to a variable\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 with Ex 1 below.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 You can also set values to arrays by selecting the value of the array and redefining\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 that value (Ex 2)\cf4 \cb1 \strokec4 \
\
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Code Examples:\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 // Ex 1 (array assignment value):\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  animalArray \cf7 \strokec7 =\cf4 \strokec4  [\cf6 \strokec6 "cat"\cf4 \strokec4 , \cf6 \strokec6 "dog"\cf4 \strokec4 , \cf6 \strokec6 "bird"\cf4 \strokec4 , \cf6 \strokec6 "human"\cf4 \strokec4 ];\cb1 \

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  myFavoriteAnimal \cf7 \strokec7 =\cf4 \strokec4  animalArray[\cf9 \strokec9 0\cf4 \strokec4 ];\cb1 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "my favorite animal is:"\cf4 \strokec4 , myFavoriteAnimal);\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Ex 2 (set array value)\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 animalArray[\cf9 \strokec9 2\cf4 \strokec4 ] \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 "rhino"\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (animalArray);\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "exercise"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl480\partightenfactor0
\cf6 \cb3 \strokec6 1. Given the following array: let cityWeatherData = [true, "cold", "summer", "new york"];\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 it is most likely incorrect that it's cold in the summer time in new york.\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Your mission is to change the true value to false.\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 2. Log out the new values of cityWeatherData\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Good luck!\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 // Exercise Solution:\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  cityWeatherData \cf7 \strokec7 =\cf4 \strokec4  [\cf9 \strokec9 true\cf4 \strokec4 , \cf6 \strokec6 "cold"\cf4 \strokec4 , \cf6 \strokec6 "summer"\cf4 \strokec4 , \cf6 \strokec6 "new york"\cf4 \strokec4 ];\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 cityWeatherData[\cf9 \strokec9 0\cf4 \strokec4 ] \cf7 \strokec7 =\cf4 \strokec4  \cf9 \strokec9 false\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (cityWeatherData);\cb1 \
\
}