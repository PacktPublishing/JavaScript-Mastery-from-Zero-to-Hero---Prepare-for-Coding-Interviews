{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Italic;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red98\green98\blue98;\red17\green17\blue17;\red255\green255\blue255;
\red214\green156\blue74;\red215\green219\blue225;\red118\green210\blue190;\red132\green99\blue212;\red102\green168\blue206;
\red183\green49\blue49;\red249\green195\blue53;}
{\*\expandedcolortbl;;\cssrgb\c45882\c45882\c45882;\cssrgb\c8235\c8235\c8235;\cssrgb\c100000\c100000\c100000;
\cssrgb\c87451\c67059\c36078;\cssrgb\c87451\c88627\c90588;\cssrgb\c52549\c85098\c79216;\cssrgb\c59216\c48627\c86275;\cssrgb\c46667\c71765\c84314;
\cssrgb\c77647\c27451\c25098;\cssrgb\c98431\c80000\c26275;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\i\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:
\f1\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 document\cf6 \strokec6 .\cf7 \strokec7 getElementById\cf6 \strokec6 ("\cf8 \strokec8 lesson\cf6 \strokec6 ").\cf5 \strokec5 innerHTML\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf8 \strokec8 `\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 The if/else statement executes a block of code if a specified \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 condition is true (boolean). If the condition is false, another block of \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 code can be executed. The if/else statement is a part of \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 JavaScript's "Conditional" Statements, which are used to perform \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 different actions based on different conditions.\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 Booleans are datatype which contain true or false values \cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 let isItRaining = true;\cf4 \cb1 \strokec4 \
\
\
\cf8 \cb3 \strokec8 Equality Operators are different than assigment\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 Assignment Ex: let x = 2;\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 Equality Operators include: ==, ===, < > <= >=\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 Ex: x > y, a <= b\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 `\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \cb3 \strokec2 // Code Examples:
\f1\i0 \cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 const\cf4 \strokec4  \cf6 \strokec6 x\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf10 \strokec10 2\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9 const\cf4 \strokec4  \cf6 \strokec6 y\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf10 \strokec10 3\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cf9 \cb3 \strokec9 function\cf4 \strokec4  \cf7 \strokec7 conditional\cf6 \strokec6 ()\cf4 \strokec4  \cf9 \strokec9 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 if\cf4 \strokec4  \cf6 \strokec6 (x\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf6 \strokec6 y)\cf4 \strokec4  \cf9 \strokec9 \{\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 return\cf4 \strokec4  \cf11 \strokec11 true\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3   \cf9 \strokec9 \}\cf4 \strokec4  \cf9 \strokec9 else\cf4 \strokec4  \cf9 \strokec9 \{\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 return\cf4 \strokec4  \cf11 \strokec11 false\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3   \cf9 \strokec9 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 console\cf6 \strokec6 .\cf7 \strokec7 log\cf6 \strokec6 (\cf7 \strokec7 conditional\cf6 \strokec6 ());\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \cb3 \strokec2 // Exercise
\f1\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 document\cf6 \strokec6 .\cf7 \strokec7 getElementById\cf6 \strokec6 ("\cf8 \strokec8 exercise\cf6 \strokec6 ").\cf5 \strokec5 innerHTML\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf8 \strokec8 `\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 Create a timetravel program that can send us back in time! Woohoo\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 1. Create two const global variables speed and time and initialze speed\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 and time to any numbers as long as time is less than speed\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 2. Create an additional reassignable variable called loadData as a boolean\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 and initialize it to false. \cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 Now we have our global programming variables set up and it's time to \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 set the wheels in motion!. \cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 3. Write a function timeTravel that takes two arguments x and y. Add\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 conditional logic to the function that checks whether x is greater than\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 or equal to y. If this is true then return the function so that loadData\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 is modified to true. If it's false then return loadData explicitly again\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 to equal false. \cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 4. Write a second function called nebular that checks to see if loadData\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 is true or false. If it's true then nebular should run a console log with \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 the string input: "Welcome to the stone age!"\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 5. Execute both functions inputting speed and time as \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 arguments for timeTravel setting speed to x and time to y. \cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 6. Once you succeed in finishing the program watch our for \cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 dinosaurs in the stone age and yabadabadoooooo\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 `\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0

\f0\i \cf2 \cb3 \strokec2 // Exercise Solution:
\f1\i0 \cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 const\cf4 \strokec4  \cf6 \strokec6 speed\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf10 \strokec10 2\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9 const\cf4 \strokec4  \cf6 \strokec6 time\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf10 \strokec10 1\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cf9 \cb3 \strokec9 let\cf4 \strokec4  \cf6 \strokec6 loadData\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf11 \strokec11 false\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 console\cf6 \strokec6 .\cf7 \strokec7 log\cf6 \strokec6 ("\cf8 \strokec8 the state of loadData before:\cf6 \strokec6 ",\cf4 \strokec4  \cf6 \strokec6 loadData);\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 function\cf4 \strokec4  \cf7 \strokec7 timeTravel\cf6 \strokec6 (x,\cf4 \strokec4  \cf6 \strokec6 y)\cf4 \strokec4  \cf9 \strokec9 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 if\cf4 \strokec4  \cf6 \strokec6 (x\cf4 \strokec4  \cf6 \strokec6 >=\cf4 \strokec4  \cf6 \strokec6 y)\cf4 \strokec4  \cf9 \strokec9 \{\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 return\cf4 \strokec4  \cf6 \strokec6 (loadData\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf11 \strokec11 true\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3   \cf9 \strokec9 \}\cf4 \strokec4  \cf9 \strokec9 else\cf4 \strokec4  \cf9 \strokec9 \{\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 return\cf4 \strokec4  \cf6 \strokec6 (loadData\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf11 \strokec11 false\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3   \cf9 \strokec9 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 \}\cf4 \cb1 \strokec4 \
\
\cf9 \cb3 \strokec9 function\cf4 \strokec4  \cf7 \strokec7 nebular\cf6 \strokec6 ()\cf4 \strokec4  \cf9 \strokec9 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 if\cf4 \strokec4  \cf6 \strokec6 (loadData)\cf4 \strokec4  \cf9 \strokec9 \{\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 console\cf6 \strokec6 .\cf7 \strokec7 log\cf6 \strokec6 ("\cf8 \strokec8 Welcome to the stone age!!!\cf6 \strokec6 ");\cf4 \cb1 \strokec4 \
\cb3   \cf9 \strokec9 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 timeTravel\cf6 \strokec6 (speed,\cf4 \strokec4  \cf6 \strokec6 time);\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 nebular\cf6 \strokec6 ();\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 console\cf6 \strokec6 .\cf7 \strokec7 log\cf6 \strokec6 ("\cf8 \strokec8 the state of loadData after:\cf6 \strokec6 ",\cf4 \strokec4  \cf6 \strokec6 loadData);\cf4 \cb1 \strokec4 \
\
\
\
\
}