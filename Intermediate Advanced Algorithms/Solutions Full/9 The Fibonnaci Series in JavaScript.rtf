{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red28\green92\blue255;
\red236\green101\blue197;}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c13333\c46667\c100000;
\cssrgb\c94902\c50196\c81569;}
\margl1440\margr1440\vieww15560\viewh12680\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:\cf4 \cb1 \strokec4 \
\cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "lesson"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Exercise: The Fibonnaci Series in JavaScript\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 The Fibonnaci is a magical series of numbers in which each number  \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 ( Fibonacci number ) is the sum of the two preceding numbers. \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 The simplest is the series 1, 1, 2, 3, 5, 8, etc.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 The golden ratio describes predictable patterns \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 on everything from atoms to huge stars in the sky. \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 The ratio is derived from the Fibonacci sequence, \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 named after its Italian founder, Leonardo Fibonacci. \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Nature uses this ratio to maintain balance, and the financial \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 markets seem to as well.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 F(n) = F(n-1) + F(n-2)\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 // 0, 1, 1, 2, 3, 5, 8, 13, 21, 34\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 // Fn(0) = 0, Fn(1) = 1, Fn(2) = 1 Fn(3) = 2, Fn(4) = 3\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Example 1: Recursive Fib\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Big O notation, indicating the order of growth of some quantity as a \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 function of n or the limiting behavior of a function, e.g. \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 in computational complexity theory\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 // Code Examples:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // Example 1: Recursive Fib  \cf4 \cb1 \strokec4 \

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 fibonacciRecursive\cf4 \strokec4 (
\f1\i \cf9 \strokec9 num
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3   \cf7 \strokec7 if\cf4 \strokec4  (num \cf7 \strokec7 ===\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ) \cf7 \strokec7 return\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 if\cf4 \strokec4  (num \cf7 \strokec7 <=\cf4 \strokec4  \cf10 \strokec10 1\cf4 \strokec4 ) \cf7 \strokec7 return\cf4 \strokec4  num;\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  \cf5 \strokec5 fibonacciRecursive\cf4 \strokec4 (num \cf7 \strokec7 -\cf4 \strokec4  \cf10 \strokec10 1\cf4 \strokec4 ) \cf7 \strokec7 +\cf4 \strokec4  \cf5 \strokec5 fibonacciRecursive\cf4 \strokec4 (num \cf7 \strokec7 -\cf4 \strokec4  \cf10 \strokec10 2\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 //2 + 1 = 3, 4\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 // time complexity is exponential\cf4 \cb1 \strokec4 \
\cb3 \}\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Example I"\cf4 \strokec4 , \cf5 \strokec5 fibonacciRecursive\cf4 \strokec4 (\cf10 \strokec10 6\cf4 \strokec4 ));\cb1 \
\
\cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "exercise"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Exercise\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Convert Big O Exponential Fibonnaci to a Linear Solution\cf4 \cb1 \strokec4 \
\
\
\cf6 \cb3 \strokec6 You are working at a financial company measuring predictive graphs of\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 indexes and stocks. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 1. Your boss asks you to write a function that can calculate the\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 fibonacci sum of terms in a series that does not have an exponential\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 time complexity. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 IE:\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Fib Series:\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 0, 1, 1, 2, 3, 5, 8, 13, 21, 34\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 // Fn(0) = 0, Fn(1) = 1, Fn(2) = 1 Fn(3) = 2, Fn(4) = 3\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 2. Name the funciton fibonnaciSum. It should take an argument which is the \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 sequential number position of F(n) in the series and return all the added sums\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 of each position starting at the value where 1 equals: f(n1) = 1. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 For Example: \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 fibonnaciSum(10) \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  1 + 2 + 3 + 5 + 8 + 13 + 21 + 34 + 55 \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 expected output: 143\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 fibonnaciSum(7) - Expected Output: 33 \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 3. Log and call your function passing in 14 as the value and\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 share your solutions in the #algorithms channel on the discord!\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 // Exercise Solution:\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 // 0, 1, 2, 3, 5\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 // 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // Fn(0) = 0, Fn(1) = 1, Fn(2) = 1 Fn(3) = 2, Fn(4) = 3\cf4 \cb1 \strokec4 \
\

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 fibonacciSum\cf4 \strokec4 (
\f1\i \cf9 \strokec9 num
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  a \cf7 \strokec7 =\cf4 \strokec4  \cf10 \strokec10 1\cf4 \strokec4 ,\cb1 \
\cb3     result \cf7 \strokec7 =\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3     temp;\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  sum \cf7 \strokec7 =\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 if\cf4 \strokec4  (num \cf7 \strokec7 ===\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ) \cf7 \strokec7 return\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 while\cf4 \strokec4  (num \cf7 \strokec7 >\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ) \{\cb1 \
\cb3     temp \cf7 \strokec7 =\cf4 \strokec4  a;\cb1 \
\cb3     a \cf7 \strokec7 +=\cf4 \strokec4  result;\cb1 \
\cb3     result \cf7 \strokec7 =\cf4 \strokec4  temp;\cb1 \
\cb3     sum \cf7 \strokec7 +=\cf4 \strokec4  result;\cb1 \
\cb3     num\cf7 \strokec7 --\cf4 \strokec4 ;\cb1 \
\cb3   \}\cb1 \
\
\cb3   \cf7 \strokec7 return\cf4 \strokec4  sum;\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 // 1 + 2 + 3 + 5\cf4 \cb1 \strokec4 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "Exercise Solution I"\cf4 \strokec4 , \cf5 \strokec5 fibonacciSum\cf4 \strokec4 (\cf10 \strokec10 7\cf4 \strokec4 ));\cb1 \
\
\cf2 \cb3 \strokec2 // 0, 1, 1, 2, 3, 5, 8 , 13\cf4 \cb1 \strokec4 \

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 printFib\cf4 \strokec4 (
\f1\i \cf9 \strokec9 num
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  arr \cf7 \strokec7 =\cf4 \strokec4  [];\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  calc \cf7 \strokec7 =\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  a \cf7 \strokec7 =\cf4 \strokec4  \cf10 \strokec10 1\cf4 \strokec4 ,\cb1 \
\cb3     result \cf7 \strokec7 =\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ,\cb1 \
\cb3     temp;\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  sum \cf7 \strokec7 =\cf4 \strokec4  \cf7 \strokec7 -\cf10 \strokec10 1\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 if\cf4 \strokec4  (num \cf7 \strokec7 ===\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ) \cf7 \strokec7 return\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 while\cf4 \strokec4  (num \cf7 \strokec7 >=\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ) \{\cb1 \
\cb3     temp \cf7 \strokec7 =\cf4 \strokec4  a;\cb1 \
\cb3     a \cf7 \strokec7 +=\cf4 \strokec4  result;\cb1 \
\cb3     result \cf7 \strokec7 =\cf4 \strokec4  temp;\cb1 \
\cb3     arr.\cf5 \strokec5 push\cf4 \strokec4 (result);\cb1 \
\cb3     sum \cf7 \strokec7 +=\cf4 \strokec4  result;\cb1 \
\cb3     num\cf7 \strokec7 --\cf4 \strokec4 ;\cb1 \
\cb3     \cf2 \strokec2 // console.log(result);\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  corrVal \cf7 \strokec7 =\cf4 \strokec4  arr[arr.length \cf7 \strokec7 -\cf4 \strokec4  \cf10 \strokec10 2\cf4 \strokec4 ];\cb1 \
\cb3   \cf7 \strokec7 for\cf4 \strokec4  (
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf10 \strokec10 0\cf4 \strokec4 ; i \cf7 \strokec7 <\cf4 \strokec4  arr.length \cf7 \strokec7 -\cf4 \strokec4  \cf10 \strokec10 1\cf4 \strokec4 ; i\cf7 \strokec7 ++\cf4 \strokec4 ) \{\cb1 \
\cb3     calc \cf7 \strokec7 +=\cf4 \strokec4  arr[i];\cb1 \
\cb3   \}\cb1 \
\cb3   
\f1\i \cf8 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf6 \strokec6 "calc"\cf4 \strokec4 , calc);\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  corrVal;\cb1 \
\cb3 \}\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf5 \strokec5 printFib\cf4 \strokec4 (\cf10 \strokec10 10\cf4 \strokec4 ));\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \
\
}