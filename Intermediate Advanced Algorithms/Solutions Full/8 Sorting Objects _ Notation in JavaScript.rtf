{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red236\green101\blue197;
\red28\green92\blue255;\red173\green173\blue173;}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c94902\c50196\c81569;
\cssrgb\c13333\c46667\c100000;\cssrgb\c73333\c73333\c73333;}
\margl1440\margr1440\vieww21520\viewh14280\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Course Notes:\cf4 \cb1 \strokec4 \
\cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "lesson"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Reduce is a method that can be difficult to understand especially with all the \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 vague explanations that can be found on the web. There are many benefits to \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 understanding reduce as it is often used in state management (think Redux).\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Reduce is actually just a loop - but a loop with a memory built into it\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 (in arithmetic we go from left to right )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Example 1: Reduce\cf4 \cb1 \strokec4 \
\
\
\cf6 \cb3 \strokec6 Reduce sig:\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 arr.reduce(callback, initialValue);\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 // Code Examples:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // Example 1: Reduce\cf4 \cb1 \strokec4 \

\f1\i \cf8 \cb3 \strokec8 const
\f0\i0 \cf4 \strokec4  numbs \cf7 \strokec7 =\cf4 \strokec4  [\cf9 \strokec9 1\cf4 \strokec4 , \cf9 \strokec9 2\cf4 \strokec4 , \cf9 \strokec9 3\cf4 \strokec4 ];\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cb1 \
\cb3   \cf6 \strokec6 "Example 1:"\cf4 \strokec4 ,\cb1 \
\cb3   numbs.\cf5 \strokec5 reduce\cf4 \strokec4 ((
\f1\i \cf10 \strokec10 accum
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 item
\f0\i0 \cf4 \strokec4 ) 
\f1\i \cf8 \strokec8 =>
\f0\i0 \cf4 \strokec4  \{\cb1 \
\cb3     \cf7 \strokec7 return\cf4 \strokec4  accum \cf7 \strokec7 +\cf4 \strokec4  item;\cb1 \
\cb3   \}, \cf7 \strokec7 -\cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3 );\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 const
\f0\i0 \cf4 \strokec4  orders \cf7 \strokec7 =\cf4 \strokec4  [\cb1 \
\cb3   \{ id: \cf9 \strokec9 1\cf4 \strokec4 , total: \cf9 \strokec9 12\cf4 \strokec4  \},\cb1 \
\cb3   \{ id: \cf9 \strokec9 2\cf4 \strokec4 , total: \cf9 \strokec9 22\cf4 \strokec4  \},\cb1 \
\cb3   \{ id: \cf9 \strokec9 3\cf4 \strokec4 , total: \cf9 \strokec9 32\cf4 \strokec4  \}\cb1 \
\cb3 ];\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 let
\f0\i0 \cf4 \strokec4  total \cf7 \strokec7 =\cf4 \strokec4  \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cf7 \cb3 \strokec7 for\cf4 \strokec4  (
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf9 \strokec9 0\cf4 \strokec4 ; i \cf7 \strokec7 <\cf4 \strokec4  orders.length; i\cf7 \strokec7 ++\cf4 \strokec4 ) \{\cb1 \
\cb3   total \cf7 \strokec7 +=\cf4 \strokec4  orders[i].total;\cb1 \
\cb3 \}\cb1 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (total);\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cb1 \
\cb3   orders.\cf5 \strokec5 reduce\cf4 \strokec4 ((
\f1\i \cf10 \strokec10 accum
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 item
\f0\i0 \cf4 \strokec4 ) 
\f1\i \cf8 \strokec8 =>
\f0\i0 \cf4 \strokec4  \{\cb1 \
\cb3     \cf7 \strokec7 return\cf4 \strokec4  accum \cf7 \strokec7 +\cf4 \strokec4  item.total;\cb1 \
\cb3   \})\cb1 \
\cb3 );\cb1 \
\
\cf2 \cb3 \strokec2 // Exercise\cf4 \cb1 \strokec4 \
\cb3 document.\cf5 \strokec5 getElementById\cf4 \strokec4 (\cf6 \strokec6 "exercise"\cf4 \strokec4 ).innerHTML \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 `\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Exercise - Sort Out Facebook Group Users by Location \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 You are working at Facebook and you need to write an algorithm in order to \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 filter through two different meetup facebookGroups\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 so that the users can be organized by their respective countries to help organize\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 future meetups. \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Given the following two arrays of object data: \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 facebookGroup1 = [\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   \{ name: "cassandra", location: "sweden" \},\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   \{ name: "tommy", location: "usa" \},\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   \{ name: "eloise", location: "jamaica" \},\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   \{ name: "gunita", location: "india" \}\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 ];\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 facebookGroup2 = [\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   \{ name: "voytek", location: "poland" \},\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   \{ name: "senja", location: "sweden" \},\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   \{ name: "george", location: "sweden" \},\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6   \{ name: "batman", location: "jamaica" \}\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 ];\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 1. Write a function meetupByLocation which takes a location as an argument\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 and returns a new flattened array of all the users object data\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  filtered out by their location. IE. If the argument is 'sweden' then the expected\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  output should be: \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  [\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  \{ name: "cassandra", location: "sweden" \},\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  \{ name: "senja", location: "sweden" \},\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  \{ name: "george", location: "sweden" \}\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  ] \cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 2. Log and console your function and pass in 'jamaica' for the location argument.\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 Share your solutions in the discord and best of luck!!\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 `\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 // Exercise Solution:\cf4 \cb1 \strokec4 \
\

\f1\i \cf8 \cb3 \strokec8 const
\f0\i0 \cf4 \strokec4  facebookGroup1 \cf7 \strokec7 =\cf4 \strokec4  [\cb1 \
\cb3   \{ name: \cf6 \strokec6 "cassandra"\cf4 \strokec4 , location: \cf6 \strokec6 "sweden"\cf4 \strokec4  \},\cb1 \
\cb3   \{ name: \cf6 \strokec6 "tommy"\cf4 \strokec4 , location: \cf6 \strokec6 "usa"\cf4 \strokec4  \},\cb1 \
\cb3   \{ name: \cf6 \strokec6 "eloise"\cf4 \strokec4 , location: \cf6 \strokec6 "jamaica"\cf4 \strokec4  \},\cb1 \
\cb3   \{ name: \cf6 \strokec6 "gunita"\cf4 \strokec4 , location: \cf6 \strokec6 "india"\cf4 \strokec4  \}\cb1 \
\cb3 ];\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 const
\f0\i0 \cf4 \strokec4  facebookGroup2 \cf7 \strokec7 =\cf4 \strokec4  [\cb1 \
\cb3   \{ name: \cf6 \strokec6 "voytek"\cf4 \strokec4 , location: \cf6 \strokec6 "poland"\cf4 \strokec4  \},\cb1 \
\cb3   \{ name: \cf6 \strokec6 "senja"\cf4 \strokec4 , location: \cf6 \strokec6 "sweden"\cf4 \strokec4  \},\cb1 \
\cb3   \{ name: \cf6 \strokec6 "george"\cf4 \strokec4 , location: \cf6 \strokec6 "sweden"\cf4 \strokec4  \},\cb1 \
\cb3   \{ name: \cf6 \strokec6 "batman"\cf4 \strokec4 , location: \cf6 \strokec6 "jamaica"\cf4 \strokec4  \}\cb1 \
\cb3 ];\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 meetupByLocation\cf4 \strokec4 (
\f1\i \cf10 \strokec10 _location
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  flattenedArr;\cb1 \
\
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  args \cf7 \strokec7 =\cf4 \strokec4  
\f1\i \cf8 \strokec8 Array
\f0\i0 \cf4 \strokec4 .prototype.slice.\cf5 \strokec5 call\cf4 \strokec4 (arguments, \cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\cb3   flattenedArr \cf7 \strokec7 =\cf4 \strokec4  args.\cf5 \strokec5 reduce\cf4 \strokec4 (
\f1\i \cf8 \strokec8 function
\f0\i0 \cf4 \strokec4  (
\f1\i \cf10 \strokec10 accum
\f0\i0 \cf4 \strokec4 , 
\f1\i \cf10 \strokec10 item
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3     \cf7 \strokec7 return\cf4 \strokec4  accum.\cf5 \strokec5 concat\cf4 \strokec4 (item);\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf7 \strokec7 return\cf4 \strokec4  flattenedArr.\cf5 \strokec5 filter\cf4 \strokec4 ((
\f1\i \cf10 \strokec10 i
\f0\i0 \cf4 \strokec4 ) 
\f1\i \cf8 \strokec8 =>
\f0\i0 \cf4 \strokec4  \{\cb1 \
\cb3     \cf7 \strokec7 return\cf4 \strokec4  i.location \cf7 \strokec7 ===\cf4 \strokec4  _location;\cb1 \
\cb3   \});\cb1 \
\cb3 \}\cb1 \
\cf2 \cb3 \strokec2 // test here\cf4 \cb1 \strokec4 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cb1 \
\cb3   \cf6 \strokec6 "Exercise Solution I"\cf4 \strokec4 ,\cb1 \
\cb3   \cf5 \strokec5 meetupByLocation\cf4 \strokec4 (\cf6 \strokec6 "sweden"\cf4 \strokec4 , facebookGroup1, facebookGroup2)\cb1 \
\cb3 );\cb1 \
\

\f1\i \cf8 \cb3 \strokec8 function
\f0\i0 \cf4 \strokec4  \cf5 \strokec5 meetupByLocation2\cf4 \strokec4 (
\f1\i \cf10 \strokec10 _location
\f0\i0 \cf4 \strokec4 ) \{\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  groupArgs \cf7 \strokec7 =\cf4 \strokec4  
\f1\i \cf8 \strokec8 Array
\f0\i0 \cf4 \strokec4 .prototype.slice.\cf5 \strokec5 call\cf4 \strokec4 (arguments, \cf9 \strokec9 1\cf4 \strokec4 );\cb1 \
\cb3   
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  finalGroup \cf7 \strokec7 =\cf4 \strokec4  [];\cb1 \
\
\cb3   \cf7 \strokec7 for\cf4 \strokec4  (
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf9 \strokec9 0\cf4 \strokec4 ; i \cf7 \strokec7 <\cf4 \strokec4  groupArgs.length; i\cf7 \strokec7 ++\cf4 \strokec4 ) \{\cb1 \
\cb3     
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  arrArgs \cf7 \strokec7 =\cf4 \strokec4  groupArgs[i];\cb1 \
\cb3     \cf2 \strokec2 // console.log(groupArgs[i]);\cf4 \cb1 \strokec4 \
\
\cb3     \cf7 \strokec7 for\cf4 \strokec4  (
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  j \cf7 \strokec7 =\cf4 \strokec4  \cf9 \strokec9 0\cf4 \strokec4 ; j \cf7 \strokec7 <\cf4 \strokec4  arrArgs.length; j\cf7 \strokec7 ++\cf4 \strokec4 ) \{\cb1 \
\cb3       
\f1\i \cf8 \strokec8 let
\f0\i0 \cf4 \strokec4  innerVal \cf7 \strokec7 =\cf4 \strokec4  arrArgs[j];\cb1 \
\
\cb3       \cf7 \strokec7 if\cf4 \strokec4  (innerVal.location \cf7 \strokec7 ===\cf4 \strokec4  _location) \{\cb1 \
\cb3         finalGroup.\cf5 \strokec5 push\cf4 \strokec4 (innerVal);\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3   \cf7 \strokec7 return\cf4 \strokec4  finalGroup;\cb1 \
\cb3 \}\cb1 \
\
\cf2 \cb3 \strokec2 // test here\cf4 \cb1 \strokec4 \

\f1\i \cf8 \cb3 \strokec8 console
\f0\i0 \cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cb1 \
\cb3   \cf6 \strokec6 "Exercise Solution II"\cf4 \strokec4 ,\cb1 \
\cb3   \cf5 \strokec5 meetupByLocation2\cf4 \strokec4 (\cf6 \strokec6 "sweden"\cf4 \strokec4 , facebookGroup1, facebookGroup2)\cb1 \
\cb3 );\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf11 \outl0\strokewidth0 \
}