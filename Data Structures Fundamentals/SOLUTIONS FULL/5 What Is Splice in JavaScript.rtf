{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red43\green53\blue116;\red0\green11\blue19;\red173\green173\blue173;
\red212\green174\blue117;\red34\green158\blue53;\red27\green66\blue117;\red134\green78\blue169;\red236\green101\blue197;
}
{\*\expandedcolortbl;;\cssrgb\c21961\c28235\c52941;\cssrgb\c0\c4706\c9412;\cssrgb\c73333\c73333\c73333;
\cssrgb\c86667\c73333\c53333;\cssrgb\c13333\c66667\c26667;\cssrgb\c13333\c33333\c53333;\cssrgb\c60000\c40000\c72157;\cssrgb\c94902\c50196\c81569;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
// Course Notes:\cf4 \cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 getElementById\cf4 (\cf6 "lesson"\cf4 ).innerHTML \cf7 =\cf4  \cf6 `\cf4 \cb1 \
\cf6 \cb3 Removing Elements from Arrays with Splice\cf4 \cb1 \
\
\cf6 \cb3 Now that we've covered how to remove elements in the beginning\cf4 \cb1 \
\cf6 \cb3 and the end points of an array, let's look at a more customizable way\cf4 \cb1 \
\cf6 \cb3 to remove elements from anywhere we'd like in the array with the splice() method.\cf4 \cb1 \
\
\cf6 \cb3 Splice can effectively remove any number of items from an array consecutively from \cf4 \cb1 \
\cf6 \cb3 any given starting point that we input. \cf4 \cb1 \
\
\cf6 \cb3 Splice can take three arguments. The first argument is for selecting the starting\cf4 \cb1 \
\cf6 \cb3 position of where we remove items (*with the zero index) and the second argument\cf4 \cb1 \
\cf6 \cb3 denotes how many items will be consecutively deleted from the starting position. \cf4 \cb1 \
\
\cf6 \cb3 Ex 1 Splice Method Below\cf4 \cb1 \
\
\cf6 \cb3 Splice can also be used to create a new copy of the array with the removed items.\cf4 \cb1 \
\
\cf6 \cb3 Ex 2 Splice Method To Return A New Array\cf4 \cb1 \
\
\
\cf6 \cb3 `\cf4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 // Code Examples:\cf4 \cb1 \
\cf2 \cb3 // Example 1: The Splice Method\cf4 \cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 let
\f0\i0 \cf4  colorsArray \cf7 =\cf4  [\cf6 "blue"\cf4 , \cf6 "green"\cf4 , \cf6 "brown"\cf4 , \cf6 "black"\cf4 ];\cb1 \

\f1\i \cf8 \cb3 console
\f0\i0 \cf4 .\cf8 log\cf4 (\cf6 "Example 1:"\cf4 , colorsArray);\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 colorsArray.\cf5 splice\cf4 (\cf9 2\cf4 , \cf9 2\cf4 );\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 // Example 2: Splice Method To Return A New Array with Removed Items\cf4 \cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 let
\f0\i0 \cf4  array \cf7 =\cf4  [\cf9 1\cf4 , \cf9 2\cf4 , \cf9 3\cf4 , \cf9 4\cf4 ];\cb1 \

\f1\i \cf8 \cb3 let
\f0\i0 \cf4  newArray \cf7 =\cf4  array.\cf5 splice\cf4 (\cf9 2\cf4 , \cf9 2\cf4 );\cb1 \

\f1\i \cf8 \cb3 console
\f0\i0 \cf4 .\cf8 log\cf4 (\cf6 "Example 2:"\cf4 , newArray);\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 // Exercise\cf4 \cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 document.\cf5 getElementById\cf4 (\cf6 "exercise"\cf4 ).innerHTML \cf7 =\cf4  \cf6 `\cf4 \cb1 \
\cf6 \cb3 Exercise - Use Splice to decode the puzzle \cf4 \cb1 \
\
\cf6 \cb3 OBJ: You work for the CIA and your job is to decode an unusual communicaiton of strings\cf4 \cb1 \
\cf6 \cb3 with a hidden message using the splice method. The final sentence should only contain \cf4 \cb1 \
\cf6 \cb3 the following indexed values of the INITIAL string arrays: 2,3,5,6,7\cf4 \cb1 \
\
\cf6 \cb3 1. Initialize an array called jumbled with the following strings consecutively:\cf4 \cb1 \
\cf6 \cb3 'unlock', 'hidden', 'the', 'cat', 'messages', 'jumped', 'over', 'the moon'  \cf4 \cb1 \
\
\cf6 \cb3 2. You can only use the splice method to selectively decode and return the final message\cf4 \cb1 \
\cf6 \cb3 logged in the console. \cf4 \cb1 \
\
\cf6 \cb3 BONUS Return the deleted items to a new variable called CIAConfidential and share both \cf4 \cb1 \
\cf6 \cb3 confidential decoded logs in the discord. \cf4 \cb1 \
\
\cf6 \cb3 Good luck saving the world! \cf4 \cb1 \
\cf6 \cb3 `\cf4 ;\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 // Exercise Solution:\cf4 \cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 const
\f0\i0 \cf4  jumbled \cf7 =\cf4  [\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   \cf6 "unlock"\cf4 ,\cb1 \
\cb3   \cf6 "hidden"\cf4 ,\cb1 \
\cb3   \cf6 "the"\cf4 ,\cb1 \
\cb3   \cf6 "cat"\cf4 ,\cb1 \
\cb3   \cf6 "messages"\cf4 ,\cb1 \
\cb3   \cf6 "jumped"\cf4 ,\cb1 \
\cb3   \cf6 "over"\cf4 ,\cb1 \
\cb3   \cf6 "the moon"\cf4 \cb1 \
\cb3 ];\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 // Bonus:\cf4 \cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 function
\f0\i0 \cf4  \cf5 CIA\cf4 () \{\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   
\f1\i \cf8 let
\f0\i0 \cf4  newJumbled \cf7 =\cf4  [\cf7 ...\cf4 jumbled];\cb1 \
\cb3   
\f1\i \cf8 let
\f0\i0 \cf4  CIACOnfidential \cf7 =\cf4  newJumbled.\cf5 splice\cf4 (\cf9 0\cf4 , \cf9 2\cf4 ) \cf7 +\cf4  newJumbled.\cf5 splice\cf4 (\cf9 2\cf4 , \cf9 1\cf4 );\cb1 \
\cb3   \cf7 return\cf4  CIACOnfidential;\cb1 \
\cb3 \}\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 console
\f0\i0 \cf4 .\cf8 log\cf4 (\cf6 "Bonus:"\cf4 , \cf5 CIA\cf4 ());\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3 jumbled.\cf5 splice\cf4 (\cf9 0\cf4 , \cf9 2\cf4 );\cb1 \
\cb3 jumbled.\cf5 splice\cf4 (\cf9 2\cf4 , \cf9 1\cf4 );\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f1\i \cf8 \cb3 console
\f0\i0 \cf4 .\cf8 log\cf4 (\cf6 "Exercise Solution:"\cf4 , jumbled);\cb1 \
\
\
\
\
}